window.SIDEBAR_ITEMS = {"enum":[["STATUS_SEL_A","Comparison used for the MOV x, STATUS instruction."]],"struct":[["EXEC_STALLED_R","Field `EXEC_STALLED` reader - If 1, an instruction written to SMx_INSTR is stalled, and latched by the state machine. Will clear to 0 once this instruction completes."],["INLINE_OUT_EN_R","Field `INLINE_OUT_EN` reader - If 1, use a bit of OUT data as an auxiliary write enable When used in conjunction with OUT_STICKY, writes with an enable of 0 will deassert the latest pin write. This can create useful masking/override behaviour due to the priority ordering of state machine pin writes (SM0 < SM1 < …)"],["INLINE_OUT_EN_W","Field `INLINE_OUT_EN` writer - If 1, use a bit of OUT data as an auxiliary write enable When used in conjunction with OUT_STICKY, writes with an enable of 0 will deassert the latest pin write. This can create useful masking/override behaviour due to the priority ordering of state machine pin writes (SM0 < SM1 < …)"],["JMP_PIN_R","Field `JMP_PIN` reader - The GPIO number to use as condition for JMP PIN. Unaffected by input mapping."],["JMP_PIN_W","Field `JMP_PIN` writer - The GPIO number to use as condition for JMP PIN. Unaffected by input mapping."],["OUT_EN_SEL_R","Field `OUT_EN_SEL` reader - Which data bit to use for inline OUT enable"],["OUT_EN_SEL_W","Field `OUT_EN_SEL` writer - Which data bit to use for inline OUT enable"],["OUT_STICKY_R","Field `OUT_STICKY` reader - Continuously assert the most recent OUT/SET to the pins"],["OUT_STICKY_W","Field `OUT_STICKY` writer - Continuously assert the most recent OUT/SET to the pins"],["R","Register `SM_EXECCTRL` reader"],["SIDE_EN_R","Field `SIDE_EN` reader - If 1, the MSB of the Delay/Side-set instruction field is used as side-set enable, rather than a side-set data bit. This allows instructions to perform side-set optionally, rather than on every instruction, but the maximum possible side-set width is reduced from 5 to 4. Note that the value of PINCTRL_SIDESET_COUNT is inclusive of this enable bit."],["SIDE_EN_W","Field `SIDE_EN` writer - If 1, the MSB of the Delay/Side-set instruction field is used as side-set enable, rather than a side-set data bit. This allows instructions to perform side-set optionally, rather than on every instruction, but the maximum possible side-set width is reduced from 5 to 4. Note that the value of PINCTRL_SIDESET_COUNT is inclusive of this enable bit."],["SIDE_PINDIR_R","Field `SIDE_PINDIR` reader - If 1, side-set data is asserted to pin directions, instead of pin values"],["SIDE_PINDIR_W","Field `SIDE_PINDIR` writer - If 1, side-set data is asserted to pin directions, instead of pin values"],["SM_EXECCTRL_SPEC","Execution/behavioural settings for state machine 0"],["STATUS_N_R","Field `STATUS_N` reader - Comparison level for the MOV x, STATUS instruction"],["STATUS_N_W","Field `STATUS_N` writer - Comparison level for the MOV x, STATUS instruction"],["STATUS_SEL_R","Field `STATUS_SEL` reader - Comparison used for the MOV x, STATUS instruction."],["STATUS_SEL_W","Field `STATUS_SEL` writer - Comparison used for the MOV x, STATUS instruction."],["W","Register `SM_EXECCTRL` writer"],["WRAP_BOTTOM_R","Field `WRAP_BOTTOM` reader - After reaching wrap_top, execution is wrapped to this address."],["WRAP_BOTTOM_W","Field `WRAP_BOTTOM` writer - After reaching wrap_top, execution is wrapped to this address."],["WRAP_TOP_R","Field `WRAP_TOP` reader - After reaching this address, execution is wrapped to wrap_bottom. If the instruction is a jump, and the jump condition is true, the jump takes priority."],["WRAP_TOP_W","Field `WRAP_TOP` writer - After reaching this address, execution is wrapped to wrap_bottom. If the instruction is a jump, and the jump condition is true, the jump takes priority."]]};