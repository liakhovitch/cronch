window.SIDEBAR_ITEMS = {"struct":[["DM_OVCN_R","Field `DM_OVCN` reader - DM overcurrent"],["DM_OVV_R","Field `DM_OVV` reader - DM over voltage"],["DM_PULLDN_EN_R","Field `DM_PULLDN_EN` reader - DM pull down enable"],["DM_PULLDN_EN_W","Field `DM_PULLDN_EN` writer - DM pull down enable"],["DM_PULLUP_EN_R","Field `DM_PULLUP_EN` reader - DM pull up enable"],["DM_PULLUP_EN_W","Field `DM_PULLUP_EN` writer - DM pull up enable"],["DM_PULLUP_HISEL_R","Field `DM_PULLUP_HISEL` reader - Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 - Pull = Rpu1 + Rpu2"],["DM_PULLUP_HISEL_W","Field `DM_PULLUP_HISEL` writer - Enable the second DM pull up resistor. 0 - Pull = Rpu2; 1 - Pull = Rpu1 + Rpu2"],["DP_OVCN_R","Field `DP_OVCN` reader - DP overcurrent"],["DP_OVV_R","Field `DP_OVV` reader - DP over voltage"],["DP_PULLDN_EN_R","Field `DP_PULLDN_EN` reader - DP pull down enable"],["DP_PULLDN_EN_W","Field `DP_PULLDN_EN` writer - DP pull down enable"],["DP_PULLUP_EN_R","Field `DP_PULLUP_EN` reader - DP pull up enable"],["DP_PULLUP_EN_W","Field `DP_PULLUP_EN` writer - DP pull up enable"],["DP_PULLUP_HISEL_R","Field `DP_PULLUP_HISEL` reader - Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 - Pull = Rpu1 + Rpu2"],["DP_PULLUP_HISEL_W","Field `DP_PULLUP_HISEL` writer - Enable the second DP pull up resistor. 0 - Pull = Rpu2; 1 - Pull = Rpu1 + Rpu2"],["R","Register `USBPHY_DIRECT` reader"],["RX_DD_R","Field `RX_DD` reader - Differential RX"],["RX_DM_R","Field `RX_DM` reader - DPM pin state"],["RX_DP_R","Field `RX_DP` reader - DPP pin state"],["RX_PD_R","Field `RX_PD` reader - RX power down override (if override enable is set). 1 = powered down."],["RX_PD_W","Field `RX_PD` writer - RX power down override (if override enable is set). 1 = powered down."],["TX_DIFFMODE_R","Field `TX_DIFFMODE` reader - TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: Differential drive mode (TX_DM, TX_DM_OE ignored)"],["TX_DIFFMODE_W","Field `TX_DIFFMODE` writer - TX_DIFFMODE=0: Single ended mode TX_DIFFMODE=1: Differential drive mode (TX_DM, TX_DM_OE ignored)"],["TX_DM_OE_R","Field `TX_DM_OE` reader - Output enable. If TX_DIFFMODE=1, Ignored. If TX_DIFFMODE=0, OE for DPM only. 0 - DPM in Hi-Z state; 1 - DPM driving"],["TX_DM_OE_W","Field `TX_DM_OE` writer - Output enable. If TX_DIFFMODE=1, Ignored. If TX_DIFFMODE=0, OE for DPM only. 0 - DPM in Hi-Z state; 1 - DPM driving"],["TX_DM_R","Field `TX_DM` reader - Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives DPM only. TX_DM_OE=1 to enable drive. DPM=TX_DM"],["TX_DM_W","Field `TX_DM` writer - Output data. TX_DIFFMODE=1, Ignored TX_DIFFMODE=0, Drives DPM only. TX_DM_OE=1 to enable drive. DPM=TX_DM"],["TX_DP_OE_R","Field `TX_DP_OE` reader - Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff pair. 0 - DPP/DPM in Hi-Z state; 1 - DPP/DPM driving If TX_DIFFMODE=0, OE for DPP only. 0 - DPP in Hi-Z state; 1 - DPP driving"],["TX_DP_OE_W","Field `TX_DP_OE` writer - Output enable. If TX_DIFFMODE=1, OE for DPP/DPM diff pair. 0 - DPP/DPM in Hi-Z state; 1 - DPP/DPM driving If TX_DIFFMODE=0, OE for DPP only. 0 - DPP in Hi-Z state; 1 - DPP driving"],["TX_DP_R","Field `TX_DP` reader - Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. TX_DP_OE=1 to enable drive. DPP=TX_DP, DPM=~TX_DP If TX_DIFFMODE=0, Drives DPP only. TX_DP_OE=1 to enable drive. DPP=TX_DP"],["TX_DP_W","Field `TX_DP` writer - Output data. If TX_DIFFMODE=1, Drives DPP/DPM diff pair. TX_DP_OE=1 to enable drive. DPP=TX_DP, DPM=~TX_DP If TX_DIFFMODE=0, Drives DPP only. TX_DP_OE=1 to enable drive. DPP=TX_DP"],["TX_FSSLEW_R","Field `TX_FSSLEW` reader - TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed slew rate"],["TX_FSSLEW_W","Field `TX_FSSLEW` writer - TX_FSSLEW=0: Low speed slew rate TX_FSSLEW=1: Full speed slew rate"],["TX_PD_R","Field `TX_PD` reader - TX power down override (if override enable is set). 1 = powered down."],["TX_PD_W","Field `TX_PD` writer - TX power down override (if override enable is set). 1 = powered down."],["USBPHY_DIRECT_SPEC","This register allows for direct control of the USB phy. Use in conjunction with usbphy_direct_override register to enable each override bit."],["W","Register `USBPHY_DIRECT` writer"]]};